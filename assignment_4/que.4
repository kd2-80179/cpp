
        
   
   
# include<iostream>
using namespace std;

class Matrix
{
    private:
            int arr[3][3];
            int n,m;
            int transpose[3][3];
            int m1[3][3];
            int m2[3][3];
            int m3[3][3];;
    public:
            Matrix(int N,int M)
            {
            this->n=N;
            this->m=M;
            }

            void accept()
            {
                cout<<"enter matrix 1 elements"<<endl;        
                for(int i=0;i<n;i++)
                {
                    for(int j=0;j<m;j++)
                    {
                        cin>>m1[i][j];
                    }
                }

                cout<<"enter matrix 2 elements"<<endl;

                for(int i=0;i<n;i++)
                {
                    for(int j=0;j<m;j++)
                    {
                        cin>>m1[i][j];
                    }
                }            
            }

            void print()
            {
                cout<<" matrix 1 elements are "<<endl;    
                for(int i=0;i<n;i++)
                {
                    cout<<"|";
                    for(int j=0;j<m;j++)
                    {
                        cout<<m1[i][j];
                        cout<<",";
                    }
                    cout<<"|"<<endl;
                }

                cout<<" matrix 2 element are "<<endl;    
                for(int i=0;i<n;i++)
                {
                    cout<<"|";
                    for(int j=0;j<m;j++)
                    {
                        cout<<m1[i][j];
                        cout<<",";
                    }
                    cout<<"|"<<endl;
                }
            }

            void add()
            {
                for(int i = 0; i < n; i++)
                {
                    for(int j = 0; j < m; j++)
                    {
                        m2[i][j] = m1[i][j] + arr[i][j];
                    }
                }
            
                for(int i = 0; i < n; i++)
                {
                    for(int j = 0; j < m; j++)
                        cout << m2[i][j] << " ";
                    cout << endl;
                }
            }

            void sub()
            {
                for(int i = 0; i < n; i++)
                {
                    for(int j = 0; j < m; j++)
                    {
                        m2[i][j] = m1[i][j] - arr[i][j];
                    }
                }
            
                for(int i = 0; i < n; i++)
                {
                    for(int j = 0; j < m; j++)
                        cout << m2[i][j] << " ";
                    cout << endl;
                }
            }

            void mul()
            {   
                int sum=0;     
                for (int c = 0; c < 3; c++) 
                {
                    for (int d = 0; d < 3; d++) 
                    {
                        for (int k = 0; k < 3; k++) 
                        {
                            sum = sum + m1[c][k]*arr[k][d];
                        }
                        m3[c][d] = sum;
                    sum = 0;
                    }
                }
                cout << "\nProduct of the matrices:\n"<<endl;
                for (int c = 0; c < 3; c++) 
                {
                    for (int d = 0; d < 3; d++)
                        cout << m3[c][d] << " ";
                    cout << endl;
                }
            }

            void Transpose()
            {
            // Computing transpose of the matrix
                for (int i = 0; i < n; ++i)
                    for (int j = 0; j < m; ++j) 
                    {
                        transpose[j][i] = arr[i][j];
                    }

            // Printing the transpose
                cout << "\nTranspose of Matrix: " << endl;
                for (int i = 0; i < m; ++i)
                    for (int j = 0; j < n; ++j) 
                    {
                        cout << " " << transpose[i][j];
                        if (j == n - 1)
                            cout << endl << endl;
                    }
            }
    };

int menu()
{
    int choice;
    cout<<"choose option:"<<endl;
    cout<<"0. Exit"<<endl;
    cout<<"1. Accept"<<endl;
    cout<<"2. Add matrices"<<endl;
    cout<<"3. Subtract matrices"<<endl;
    cout<<"4. Multiply matrices"<<endl;
    cout<<"5. Find transpose of matricx"<<endl;
    cin>>choice;
    return choice;
}


int main()
{
    int row,index=0,col;
    cout<<"enter size for row and column"<<endl;
    cin>>row;
    cin>>col;

    int choice;
    Matrix *mat=new Matrix(row,col);;
    
    while((choice = menu()) != 0)
    {
        switch(choice)
        {
            case 1:
                mat->accept();    
            break;

            case 2:
                mat->print();
            break;

            case 3:
                mat->add();
            break;

            case 4:
                mat->sub();
            break;

            case 5: 
                mat->mul();
            break;

            case 6:
                mat->Transpose();
            break;

            default:
                cout<<"Enter correct Choice!!!";
            break;

        }
    }
    return 0;
}
    
 